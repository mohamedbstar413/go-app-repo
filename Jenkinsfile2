pipeline {
    agent {
        kubernetes {
            yaml '''
                apiVersion: v1
                kind: Pod
                metadata:
                    name: jenkins-agent-pod
                    labels:
                        app: jenkins-agent
                spec:
                    serviceAccountName: jenkins
                    containers:
                        -   name: git
                            image: alpine/git:latest
                            command:
                                - sleep
                            args:
                                - 99d
                            tty: true
                        
                        -   name: helm
                            image: dtzar/helm-kubectl:latest
                            command:
                                - sleep
                            args:
                                - 99d
                            tty: true
                        -   name: kaniko
                            image: gcr.io/kaniko-project/executor:debug
                            command:
                                - /busybox/sleep
                            args:
                                - 99999
                                    
                            tty: true
            '''
        }
    }
    environment {
        GIT_REPO = 'https://github.com/mohamedbstar413/go-app-repo.git'
        GIT_BRANCH = 'main'
        DOCKER_IMAGE = 'bstar999/senior-go'
        DOCKER_TAG = "${env.BUILD_NUMBER}"
        HELM_RELEASE_NAME = 'senior-go-app'
        HELM_CHART_PATH = './senior-go-chart'
        K8S_NAMESPACE = 'default'
        SMOKE_TEST_URL = 'https://nginx-svc.default.svc.cluster.local'
    }
    stages {
        stage('Checkout') {
            steps {
                container('git') {
                    sh "git clone -b $GIT_BRANCH $GIT_REPO"
                }
            }
        }
        stage('Build docker image and push to docker hub'){
            steps{
                withCredentials([usernamePassword(
                            credentialsId: 'dockerhub',
                            usernameVariable: 'DOCKER_USER',
                            passwordVariable: 'DOCKER_PASS'
                        )])
                
                container('kaniko'){
                    sh """
                        cat > /kaniko/.docker/config.json <<EOF
                        {
                            "auths": {
                                        "https://index.docker.io/v1/": {
                                            "auth": "\$(echo -n $DOCKER_USER:$DOCKER_PASS | base64 | tr '\n')"
                                        }
                                    }
                        }
                        EOF
                        /kaniko/executor \
                            --context= `pwd` \
                            --dockerfile Dockerfile \
                            --destination $DOCKER_IMAGE:$DOCKER_TAG \
                            --cache true \
                            --verbosity=info \
                            --snapshot-mode=redo
                    """
                }
            }
        }
        stage('Create helm chart'){
            steps{
                container('helm'){
                    sh """
                        echo 'Creating Helm Chart...'
                        helm create $HELM_CHART_PATH
                        rm -rf $HELM_CHART_PATH/templates/*

                        cp k8s/* $HELM_CHART_PATH/
                        echo 'Created Helm Chart Successfully!'
                    """
                }
            }
        }
        stage('Deploy Helm Chart'){
            steps{
                container('helm'){
                    sh """
                        helm upgrade --install $HELM_RELEASE_NAME $HELM_CHART_PATH \
                        --namespace $K8S_NAMESPACE
                    """
                }
            }
        }
    }
}
